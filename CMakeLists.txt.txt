cmake_minimum_required(VERSION 3.16)
project(Esame)

# Imposta il linguaggio
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

# Imposta l'output directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/x64/Release)

# Includi i file sorgente (aggiungi o rimuovi se necessario)
set(SOURCES
    main.c
    main2.cpp
    avatar.cpp
    avatar.h
)

# Trova SFML (assicurati che SFML sia installato nel sistema o specifica il path)
set(SFML_DIR "C:/Path/To/SFML-2.6.2/lib/cmake/SFML")
find_package(SFML 2.6.2 REQUIRED COMPONENTS system window graphics audio network)

# Aggiungi CSFML se serve
find_library(CSFML_graphics csfml-graphics)
find_library(CSFML_window csfml-window)
find_library(CSFML_system csfml-system)

# Aggiungi l'eseguibile
add_executable(Esame ${SOURCES})

# Includi i path
target_include_directories(Esame PRIVATE ${SFML_INCLUDE_DIRS})

# Linka le librerie
target_link_libraries(Esame PRIVATE ${SFML_LIBRARIES} 
    ${CSFML_graphics}
    ${CSFML_window}
    ${CSFML_system}
)

# Per Visual Studio, imposta la directory di build in Release/x64
set_target_properties(Esame PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/x64/Release"
)
